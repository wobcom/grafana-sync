name: Release

on:
  release:
    types: [ created ]

jobs:
  release-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - aarch64-unknown-linux-gnu

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          target: ${{ matrix.target }}

      - name: Add openssl and pkg-config
        run: sudo apt install libssl-dev pkg-config

      - name: Build release
        run: cargo build --release --target ${{ matrix.target }}

      - name: Archive binary
        run: |
          BIN=graphsync
          TAR=graphsync-${{ github.event.release.tag_name }}-${{ matrix.target }}.tar.gz
          mkdir out
          cp target/${{ matrix.target }}/release/$BIN out/
          tar czf $TAR -C out $BIN

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          files: graphsync-${{ github.event.release.tag_name }}-${{ matrix.target }}.tar.gz
      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: fallback-${{ matrix.target }}
          path: graphsync-${{ github.event.release.tag_name }}-${{ matrix.target }}.tar.gz
